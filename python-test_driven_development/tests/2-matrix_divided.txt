The ''2-matrix_divided'' module
===============================

Using ''matrix_divided''
------------------------

Import ''matrix_divided'' from ''2-matrix_divided'' module:
	>>> add_integer = __import__("2-matrix_divided").matrix_divided

Check for module documentation:
	>>> mod = __import__("2-matrix_divided").__doc__
	>>> len(mod) > 1
	True

Check for function documentation:
	>>> func = __import__("2-matrix_divided").matrix_divided.__doc__
	>>> len(func) > 1
	True

Check for None as matrix:
	>>> matrix_divided(None, 0)
	Traceback (most recent call last):
  	...
  	TypeError: matrix must be a matrix (list of lists) of integers/floats

Check for None as div:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, None)
	Traceback (most recent call last):
  	...
	TypeError: div must be a number

Check for non-list in matrix:
	>>> matrix = "Hello World"
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Check for list and non-list in matrix:
	>>> matrix = [[1, 2, 3], "Hello World"]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Check for different length of rows:
	>>> matrix = [[1], [4, 5, 6]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Check for regular division:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Check for div = 0 handling:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	...
 	ZeroDivisionError: division by zero

Check for negative div:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, -1)
	[[-1.0,-2.0, -3.0], [-4.0, -5.0, -6.0]]

Check for inf in division:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Check for missing div:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix)
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

Check for missing arguments:
	>>> matrix_divided()
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Check for more than 2 arguments:
	 >>> matrix_divided(matrix, 1, 2)
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_divided() takes 2 positional arguments but 3 were given

Check for mix of ints and floats:
	 >>> matrix = [[1, 2.5, 3], [4.4, 5, 6.9]]
	 >>> matrix_divided(matrix, 2)
	 [[0.5, 1.25, 1.5], [2.2, 2.5, 3.45]]
	 >>> matrix
	 [[1, 2.5, 3], [4.4, 5, 6.9]]
